/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarket;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.print.PrinterException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author helal
 */
public class MainApp extends javax.swing.JFrame {

    String query;
    ResultsModel rsm = new ResultsModel();
    DatabaseConector db = new DatabaseConector();
    Validation val = new Validation();
    int selectRow = -1;
    DateTimeFormatter date;
    LocalDateTime anow;
    Color backMenueColor, forMenueColor;
    int i = 0;
    int num = 0;
    double totalAmount = 0;
    static int invoice_id = 1;
    String colName = "";
    String colValue = "";

    /**
     * Creates new form MainApp
     */
    public MainApp() {

        initComponents();
        userName.setText(DatabaseConector.user_name);
        //initiateDashFunc();
        //db.showTopProduct(this.rsm);
        userName.setText(DatabaseConector.user_name);
        Color colorBG = new Color(128, 0, 0);
        dash_menu.setBackground(colorBG);
        dash_menu.setForeground(Color.WHITE);
        dash_panel.setVisible(true);
        category_panel.setVisible(false);
        seller_panel.setVisible(false);
        product_panel.setVisible(false);
        selling_panel.setVisible(false);
        customer_panel.setVisible(false);
        licence_panel.setVisible(false);
        setTitle("Dashboard - Taiyeba Cosmetics");
        if (DatabaseConector.user_role != null && DatabaseConector.user_role.equals("Seller")) {
            //sidebar.remove(category_menu);
            category_menu.setVisible(false);
            seller_menu.setVisible(false);
            product_menu.setVisible(false);
            customer_menu.setVisible(false);
            licence_menu.setVisible(false);
            importDemo_menu.setVisible(false);
            
        }
        initiateDashFunc();
        db.showTopProduct(this.rsm);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showDataDiologue = new javax.swing.JDialog();
        dataDiologuePane = new javax.swing.JScrollPane();
        dataDiologue = new javax.swing.JTextArea();
        diologuePanel = new javax.swing.JPanel();
        sidebar = new javax.swing.JPanel();
        dash_menu = new javax.swing.JLabel();
        category_menu = new javax.swing.JLabel();
        seller_menu = new javax.swing.JLabel();
        product_menu = new javax.swing.JLabel();
        selling_menu = new javax.swing.JLabel();
        customer_menu = new javax.swing.JLabel();
        logout_menu = new javax.swing.JLabel();
        userName = new javax.swing.JLabel();
        importDemo_menu = new javax.swing.JLabel();
        licence_menu = new javax.swing.JLabel();
        panel_body = new javax.swing.JPanel();
        seller_panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        seller_id = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        seller_name = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        edit_seller = new javax.swing.JButton();
        clear_seller = new javax.swing.JButton();
        delete_seller = new javax.swing.JButton();
        add_seller = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        seller_tbl = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        seller_email = new javax.swing.JTextField();
        seller_pass = new javax.swing.JPasswordField();
        selling_panel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        bill_id = new javax.swing.JTextField();
        filter_by_cat_lab = new javax.swing.JLabel();
        filter_by_category = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        dateIn = new javax.swing.JTextField();
        clearSelling = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        selling_pro_tbl = new javax.swing.JTable();
        jLabel30 = new javax.swing.JLabel();
        Quantity = new javax.swing.JLabel();
        selling_qty = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        cust_name = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        selling_phone = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        selling_pro_name = new javax.swing.JTextField();
        addToBill = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        invoiceText = new javax.swing.JTextArea();
        print_btn = new javax.swing.JButton();
        showPriceLab = new javax.swing.JLabel();
        selling_showPrice = new javax.swing.JLabel();
        customer_panel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        customer_tbl = new javax.swing.JTable();
        jLabel34 = new javax.swing.JLabel();
        column_name = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        column_value = new javax.swing.JComboBox<>();
        search = new javax.swing.JButton();
        invoiceBtn = new javax.swing.JButton();
        product_panel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        pro_id = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        category = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        pro_name = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        edit_product = new javax.swing.JButton();
        clear_product = new javax.swing.JButton();
        delete_product = new javax.swing.JButton();
        add_product = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        pro_tbl = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        unit = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        stock = new javax.swing.JTextField();
        category_panel = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cat_id = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        cat_name = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        edit_category = new javax.swing.JButton();
        clear_category = new javax.swing.JButton();
        delete_category = new javax.swing.JButton();
        add_category = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        cat_tbl = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        cat_desc = new javax.swing.JTextArea();
        dash_panel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        totCategory = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        totAmount = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        totProduct = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        totCustomer = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        totSeller = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        totSell = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        product = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        licence_panel = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        lc_name = new javax.swing.JLabel();
        lc_pro_name = new javax.swing.JLabel();
        lc_pro_code = new javax.swing.JLabel();
        lc_db_support = new javax.swing.JLabel();
        lc_max_client = new javax.swing.JLabel();
        lc_use_client = new javax.swing.JLabel();
        lc_price = new javax.swing.JLabel();
        lc_licence = new javax.swing.JTextField();
        lc_expired_date = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();

        showDataDiologue.setBounds(new java.awt.Rectangle(300, 300, 300, 300));
        showDataDiologue.setMinimumSize(new java.awt.Dimension(300, 300));
        showDataDiologue.setSize(new java.awt.Dimension(300, 300));

        dataDiologue.setColumns(20);
        dataDiologue.setRows(5);
        dataDiologuePane.setViewportView(dataDiologue);

        javax.swing.GroupLayout diologuePanelLayout = new javax.swing.GroupLayout(diologuePanel);
        diologuePanel.setLayout(diologuePanelLayout);
        diologuePanelLayout.setHorizontalGroup(
            diologuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        diologuePanelLayout.setVerticalGroup(
            diologuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 93, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout showDataDiologueLayout = new javax.swing.GroupLayout(showDataDiologue.getContentPane());
        showDataDiologue.getContentPane().setLayout(showDataDiologueLayout);
        showDataDiologueLayout.setHorizontalGroup(
            showDataDiologueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dataDiologuePane, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
            .addComponent(diologuePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        showDataDiologueLayout.setVerticalGroup(
            showDataDiologueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showDataDiologueLayout.createSequentialGroup()
                .addComponent(dataDiologuePane, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(diologuePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        sidebar.setBackground(new java.awt.Color(102, 0, 0));

        dash_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        dash_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dash_menu.setText("Dashboard");
        dash_menu.setOpaque(true);
        dash_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dash_menuMouseClicked(evt);
            }
        });

        category_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        category_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        category_menu.setText("Categories");
        category_menu.setOpaque(true);
        category_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_menuMouseClicked(evt);
            }
        });

        seller_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        seller_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        seller_menu.setText("Manage Seller");
        seller_menu.setOpaque(true);
        seller_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seller_menuMouseClicked(evt);
            }
        });

        product_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        product_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        product_menu.setText("Product");
        product_menu.setOpaque(true);
        product_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                product_menuMouseClicked(evt);
            }
        });

        selling_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        selling_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        selling_menu.setText("Selling");
        selling_menu.setOpaque(true);
        selling_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selling_menuMouseClicked(evt);
            }
        });

        customer_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        customer_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        customer_menu.setText("Customers");
        customer_menu.setOpaque(true);
        customer_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customer_menuMouseClicked(evt);
            }
        });

        logout_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        logout_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout_menu.setText("LogOut");
        logout_menu.setOpaque(true);
        logout_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logout_menuMouseClicked(evt);
            }
        });

        userName.setBackground(new java.awt.Color(51, 0, 0));
        userName.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        userName.setForeground(new java.awt.Color(255, 255, 255));
        userName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userName.setOpaque(true);
        userName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userNameMouseClicked(evt);
            }
        });

        importDemo_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        importDemo_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        importDemo_menu.setText("Import Demo");
        importDemo_menu.setOpaque(true);
        importDemo_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                importDemo_menuMouseClicked(evt);
            }
        });

        licence_menu.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        licence_menu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        licence_menu.setText("Licence");
        licence_menu.setOpaque(true);
        licence_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                licence_menuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout sidebarLayout = new javax.swing.GroupLayout(sidebar);
        sidebar.setLayout(sidebarLayout);
        sidebarLayout.setHorizontalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addGap(0, 25, Short.MAX_VALUE)
                .addGroup(sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dash_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(category_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seller_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(product_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selling_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customer_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logout_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importDemo_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(licence_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 21, Short.MAX_VALUE))
            .addComponent(userName, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
        );
        sidebarLayout.setVerticalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(dash_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(category_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(seller_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(product_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(selling_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(customer_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(importDemo_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(licence_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(logout_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 735, Short.MAX_VALUE))
        );

        seller_panel.setMinimumSize(new java.awt.Dimension(812, 655));
        seller_panel.setName(""); // NOI18N
        seller_panel.setPreferredSize(new java.awt.Dimension(882, 643));

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setText("Manage Sellers");

        jLabel4.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 0));
        jLabel4.setText("Seller ID");

        seller_id.setEditable(false);
        seller_id.setForeground(new java.awt.Color(102, 0, 0));
        seller_id.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        jLabel5.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 0));
        jLabel5.setText("Name");

        seller_name.setForeground(new java.awt.Color(102, 0, 0));
        seller_name.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        jLabel6.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 0));
        jLabel6.setText("Password");

        edit_seller.setText("Edit");
        edit_seller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_sellerActionPerformed(evt);
            }
        });

        clear_seller.setText("Clear");
        clear_seller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_sellerActionPerformed(evt);
            }
        });

        delete_seller.setText("Delete");
        delete_seller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_sellerActionPerformed(evt);
            }
        });

        add_seller.setText("Add");
        add_seller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_sellerActionPerformed(evt);
            }
        });

        seller_tbl.setModel(rsm);
        seller_tbl.setRowHeight(25);
        seller_tbl.setSelectionBackground(new java.awt.Color(204, 204, 204));
        seller_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seller_tblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(seller_tbl);

        jLabel13.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 0, 0));
        jLabel13.setText("Seller List");

        jLabel14.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 0, 0));
        jLabel14.setText("Email");

        seller_email.setForeground(new java.awt.Color(102, 0, 0));
        seller_email.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        seller_pass.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        javax.swing.GroupLayout seller_panelLayout = new javax.swing.GroupLayout(seller_panel);
        seller_panel.setLayout(seller_panelLayout);
        seller_panelLayout.setHorizontalGroup(
            seller_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seller_panelLayout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addComponent(jLabel2))
            .addGroup(seller_panelLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jLabel4)
                .addGap(23, 23, 23)
                .addComponent(seller_id, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(seller_name, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(seller_panelLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jLabel14)
                .addGap(43, 43, 43)
                .addComponent(seller_email, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jLabel6)
                .addGap(16, 16, 16)
                .addComponent(seller_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(seller_panelLayout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(add_seller, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(edit_seller, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(delete_seller, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(clear_seller, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(seller_panelLayout.createSequentialGroup()
                .addGap(360, 360, 360)
                .addComponent(jLabel13))
            .addGroup(seller_panelLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        seller_panelLayout.setVerticalGroup(
            seller_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seller_panelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel2)
                .addGap(32, 32, 32)
                .addGroup(seller_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(seller_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(seller_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(seller_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(seller_email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(seller_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(seller_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_seller)
                    .addComponent(edit_seller)
                    .addComponent(delete_seller)
                    .addComponent(clear_seller))
                .addGap(75, 75, 75)
                .addComponent(jLabel13)
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        selling_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 0, 0));
        jLabel22.setText("Billing Information ");
        selling_panel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, -1, -1));

        jLabel23.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 0, 0));
        jLabel23.setText("Bill Id");
        selling_panel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 113, -1));

        bill_id.setEditable(false);
        bill_id.setForeground(new java.awt.Color(102, 0, 0));
        bill_id.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        selling_panel.add(bill_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 450, 150, 30));

        filter_by_cat_lab.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        filter_by_cat_lab.setForeground(new java.awt.Color(102, 0, 0));
        filter_by_cat_lab.setText("Filter by Category");
        selling_panel.add(filter_by_cat_lab, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 92, -1, -1));

        filter_by_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        filter_by_category.setBorder(null);
        filter_by_category.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filter_by_categoryItemStateChanged(evt);
            }
        });
        selling_panel.add(filter_by_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 88, 149, 29));

        jLabel29.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(102, 0, 0));
        jLabel29.setText("Date");
        selling_panel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 450, 124, -1));

        dateIn.setForeground(new java.awt.Color(102, 0, 0));
        dateIn.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        dateIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateInActionPerformed(evt);
            }
        });
        selling_panel.add(dateIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 450, 150, 30));

        clearSelling.setText("Clear");
        clearSelling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearSellingActionPerformed(evt);
            }
        });
        selling_panel.add(clearSelling, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 630, 80, -1));

        selling_pro_tbl.setModel(rsm);
        selling_pro_tbl.setRowHeight(25);
        selling_pro_tbl.setSelectionBackground(new java.awt.Color(204, 204, 204));
        selling_pro_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selling_pro_tblMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(selling_pro_tbl);

        selling_panel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 141, 420, 210));

        jLabel30.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(102, 0, 0));
        jLabel30.setText("Product List");
        selling_panel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 42, -1, -1));

        Quantity.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Quantity.setForeground(new java.awt.Color(102, 0, 0));
        Quantity.setText("Quantity");
        selling_panel.add(Quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 540, 75, -1));

        selling_qty.setForeground(new java.awt.Color(102, 0, 0));
        selling_qty.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        selling_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selling_qtyActionPerformed(evt);
            }
        });
        selling_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                selling_qtyKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                selling_qtyKeyReleased(evt);
            }
        });
        selling_panel.add(selling_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 530, 150, 30));

        jLabel31.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(102, 0, 0));
        jLabel31.setText("Customer Name");
        selling_panel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, -1));

        cust_name.setForeground(new java.awt.Color(102, 0, 0));
        cust_name.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        selling_panel.add(cust_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 490, 150, 30));

        jLabel32.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(102, 0, 0));
        jLabel32.setText("Phone");
        selling_panel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 500, 97, -1));

        selling_phone.setForeground(new java.awt.Color(102, 0, 0));
        selling_phone.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        selling_panel.add(selling_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 490, 150, 30));

        jLabel33.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(102, 0, 0));
        jLabel33.setText("Product Name");
        selling_panel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, 125, -1));

        selling_pro_name.setEditable(false);
        selling_pro_name.setForeground(new java.awt.Color(102, 0, 0));
        selling_pro_name.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        selling_panel.add(selling_pro_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 530, 150, 30));

        addToBill.setText("Add to Bill");
        addToBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToBillActionPerformed(evt);
            }
        });
        selling_panel.add(addToBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 630, 108, -1));

        invoiceText.setColumns(20);
        invoiceText.setRows(5);
        jScrollPane5.setViewportView(invoiceText);

        selling_panel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 141, 321, 201));

        print_btn.setText("Print");
        print_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_btnActionPerformed(evt);
            }
        });
        selling_panel.add(print_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(605, 88, 80, -1));

        showPriceLab.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        showPriceLab.setForeground(new java.awt.Color(102, 0, 0));
        showPriceLab.setText("Total Price:");
        selling_panel.add(showPriceLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 590, -1, -1));

        selling_showPrice.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        selling_showPrice.setText("0TK");
        selling_panel.add(selling_showPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 590, -1, -1));

        customer_tbl.setModel(rsm);
        customer_tbl.setRowHeight(25);
        customer_tbl.setSelectionBackground(new java.awt.Color(204, 204, 204));
        customer_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customer_tblMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(customer_tbl);

        jLabel34.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(102, 0, 0));
        jLabel34.setText("Customers List");

        column_name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        column_name.setToolTipText("");
        column_name.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                column_nameItemStateChanged(evt);
            }
        });

        jLabel35.setText("Filter by");

        column_value.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                column_valueItemStateChanged(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        invoiceBtn.setText("Generate Invoice");
        invoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customer_panelLayout = new javax.swing.GroupLayout(customer_panel);
        customer_panel.setLayout(customer_panelLayout);
        customer_panelLayout.setHorizontalGroup(
            customer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customer_panelLayout.createSequentialGroup()
                .addGroup(customer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customer_panelLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel35)
                        .addGap(18, 18, 18)
                        .addComponent(column_name, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(customer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(customer_panelLayout.createSequentialGroup()
                                .addComponent(column_value, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(search))
                            .addComponent(jLabel34))
                        .addGap(18, 18, 18)
                        .addComponent(invoiceBtn))
                    .addGroup(customer_panelLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        customer_panelLayout.setVerticalGroup(
            customer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customer_panelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel34)
                .addGap(42, 42, 42)
                .addGroup(customer_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(column_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(column_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search)
                    .addComponent(invoiceBtn))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
        );

        product_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 0));
        jLabel7.setText("Manage Products");
        product_panel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        jLabel15.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 0, 0));
        jLabel15.setText("Pro ID");
        product_panel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 63, -1));

        pro_id.setForeground(new java.awt.Color(102, 0, 0));
        pro_id.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        product_panel.add(pro_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 150, 30));

        jLabel16.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 0, 0));
        jLabel16.setText("Weight");
        product_panel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 63, -1));

        weight.setForeground(new java.awt.Color(102, 0, 0));
        weight.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        product_panel.add(weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 77, 30));

        jLabel17.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 0, 0));
        jLabel17.setText("Category");
        product_panel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, -1, -1));

        category.setBorder(null);
        product_panel.add(category, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 149, 29));

        jLabel18.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 0, 0));
        jLabel18.setText("Name");
        product_panel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 60, -1));

        pro_name.setForeground(new java.awt.Color(102, 0, 0));
        pro_name.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        product_panel.add(pro_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 140, 150, 30));

        jLabel19.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 0, 0));
        jLabel19.setText("Price");
        product_panel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 60, -1));

        price.setForeground(new java.awt.Color(102, 0, 0));
        price.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        product_panel.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 180, 150, 30));

        edit_product.setText("Edit");
        edit_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_productActionPerformed(evt);
            }
        });
        product_panel.add(edit_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 80, -1));

        clear_product.setText("Clear");
        clear_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_productActionPerformed(evt);
            }
        });
        product_panel.add(clear_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 290, 80, -1));

        delete_product.setText("Delete");
        delete_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_productActionPerformed(evt);
            }
        });
        product_panel.add(delete_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 290, 80, -1));

        add_product.setText("Add");
        add_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_productActionPerformed(evt);
            }
        });
        product_panel.add(add_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 80, -1));

        pro_tbl.setModel(rsm);
        pro_tbl.setRowHeight(25);
        pro_tbl.setSelectionBackground(new java.awt.Color(204, 204, 204));
        pro_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pro_tblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(pro_tbl);

        product_panel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 790, 230));

        jLabel20.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 0, 0));
        jLabel20.setText("Product List");
        product_panel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 360, -1, -1));

        unit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "kg", "l", "g", "p" }));
        product_panel.add(unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 66, -1));

        jLabel21.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 0, 0));
        jLabel21.setText("Stock");
        product_panel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 60, -1));

        stock.setForeground(new java.awt.Color(102, 0, 0));
        stock.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        product_panel.add(stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 220, 150, 30));

        jLabel24.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 0, 0));
        jLabel24.setText("Manage Category");

        jLabel25.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 0, 0));
        jLabel25.setText("Cat ID");

        cat_id.setEditable(false);
        cat_id.setForeground(new java.awt.Color(102, 0, 0));
        cat_id.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        jLabel26.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(102, 0, 0));
        jLabel26.setText("Name");

        cat_name.setForeground(new java.awt.Color(102, 0, 0));
        cat_name.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));

        jLabel27.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 0, 0));
        jLabel27.setText("Description");

        edit_category.setText("Edit");
        edit_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_categoryActionPerformed(evt);
            }
        });

        clear_category.setText("Clear");
        clear_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_categoryActionPerformed(evt);
            }
        });

        delete_category.setText("Delete");
        delete_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_categoryActionPerformed(evt);
            }
        });

        add_category.setText("Add");
        add_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_categoryActionPerformed(evt);
            }
        });

        cat_tbl.setModel(rsm);
        cat_tbl.setRowHeight(25);
        cat_tbl.setSelectionBackground(new java.awt.Color(204, 204, 204));
        cat_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cat_tblMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(cat_tbl);

        jLabel28.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 0, 0));
        jLabel28.setText("Category List");

        cat_desc.setColumns(20);
        cat_desc.setLineWrap(true);
        cat_desc.setRows(5);
        cat_desc.setWrapStyleWord(true);
        jScrollPane8.setViewportView(cat_desc);

        javax.swing.GroupLayout category_panelLayout = new javax.swing.GroupLayout(category_panel);
        category_panel.setLayout(category_panelLayout);
        category_panelLayout.setHorizontalGroup(
            category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(category_panelLayout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(category_panelLayout.createSequentialGroup()
                            .addGap(209, 209, 209)
                            .addComponent(jLabel28)))
                    .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(category_panelLayout.createSequentialGroup()
                            .addGap(186, 186, 186)
                            .addComponent(jLabel24))
                        .addGroup(category_panelLayout.createSequentialGroup()
                            .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cat_id, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cat_name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(jLabel27)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(category_panelLayout.createSequentialGroup()
                            .addGap(107, 107, 107)
                            .addComponent(add_category, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(edit_category, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(delete_category, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(clear_category, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(168, Short.MAX_VALUE))
        );
        category_panelLayout.setVerticalGroup(
            category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(category_panelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel24)
                .addGap(42, 42, 42)
                .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(category_panelLayout.createSequentialGroup()
                        .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cat_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel27))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cat_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(category_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(add_category)
                    .addComponent(edit_category)
                    .addComponent(delete_category)
                    .addComponent(clear_category))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(jLabel28)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jPanel5.setBackground(new java.awt.Color(78, 16, 61));
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Category");

        totCategory.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        totCategory.setForeground(new java.awt.Color(255, 255, 255));
        totCategory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totCategory.setText("1");
        totCategory.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(totCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totCategory)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(14, 14, 14))
        );

        jPanel6.setBackground(new java.awt.Color(44, 31, 76));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Growth Amount");

        totAmount.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        totAmount.setForeground(new java.awt.Color(255, 255, 255));
        totAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totAmount.setText("1");
        totAmount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(totAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totAmount)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(14, 14, 14))
        );

        jPanel10.setBackground(new java.awt.Color(101, 26, 63));

        jLabel8.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Products");

        totProduct.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        totProduct.setForeground(new java.awt.Color(255, 255, 255));
        totProduct.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totProduct.setText("1");
        totProduct.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(totProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totProduct)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(14, 14, 14))
        );

        jPanel11.setBackground(new java.awt.Color(53, 13, 20));

        jLabel9.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Customers");

        totCustomer.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        totCustomer.setForeground(new java.awt.Color(255, 255, 255));
        totCustomer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totCustomer.setText("1");
        totCustomer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(totCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totCustomer)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(14, 14, 14))
        );

        jPanel12.setBackground(new java.awt.Color(133, 27, 116));

        jLabel10.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Sellers");

        totSeller.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        totSeller.setForeground(new java.awt.Color(255, 255, 255));
        totSeller.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totSeller.setText("1");
        totSeller.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(totSeller, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totSeller)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addGap(14, 14, 14))
        );

        jPanel13.setBackground(new java.awt.Color(102, 43, 88));

        jLabel11.setBackground(new java.awt.Color(32, 69, 118));
        jLabel11.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Sells");

        totSell.setBackground(new java.awt.Color(83, 23, 70));
        totSell.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        totSell.setForeground(new java.awt.Color(255, 255, 255));
        totSell.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totSell.setText("1");
        totSell.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addComponent(totSell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(totSell)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(14, 14, 14))
        );

        product.setModel(rsm);
        jScrollPane1.setViewportView(product);

        jLabel12.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Top 5 Product to Sell");

        javax.swing.GroupLayout dash_panelLayout = new javax.swing.GroupLayout(dash_panel);
        dash_panel.setLayout(dash_panelLayout);
        dash_panelLayout.setHorizontalGroup(
            dash_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dash_panelLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(dash_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dash_panelLayout.createSequentialGroup()
                        .addGroup(dash_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(204, 204, 204)
                        .addGroup(dash_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                        .addGroup(dash_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );
        dash_panelLayout.setVerticalGroup(
            dash_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dash_panelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(dash_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(dash_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        jLabel42.setFont(new java.awt.Font("Noto Sans", 1, 20)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(102, 0, 0));
        jLabel42.setText("Licence Details");

        jLabel36.setText("Product Code");

        jLabel37.setText("Database Support");

        jLabel38.setText("Max Client:");

        jLabel39.setText("Use Client");

        jLabel40.setText("Price");

        jLabel41.setText("Licence");

        jLabel47.setText("Expired Date");

        lc_name.setText("jLabel48");

        lc_pro_name.setText("jLabel46");

        lc_pro_code.setText("jLabel46");

        lc_db_support.setText("jLabel46");

        lc_max_client.setText("jLabel46");

        lc_use_client.setText("jLabel46");

        lc_price.setText("lc_price");

        lc_licence.setEditable(false);
        lc_licence.setText("jTextField1");

        lc_expired_date.setText("jLabel48");

        jLabel45.setText("Client Name");

        jLabel46.setText("Product Name");

        javax.swing.GroupLayout licence_panelLayout = new javax.swing.GroupLayout(licence_panel);
        licence_panel.setLayout(licence_panelLayout);
        licence_panelLayout.setHorizontalGroup(
            licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, licence_panelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(licence_panelLayout.createSequentialGroup()
                        .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel42)
                            .addGroup(licence_panelLayout.createSequentialGroup()
                                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lc_pro_name)
                                    .addComponent(lc_db_support)
                                    .addComponent(lc_use_client))))
                        .addGap(25, 25, 25)
                        .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(licence_panelLayout.createSequentialGroup()
                                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel40))
                                .addGap(18, 18, 18)
                                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lc_pro_code, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lc_max_client, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lc_price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(licence_panelLayout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addGap(18, 18, 18)
                                .addComponent(lc_expired_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(licence_panelLayout.createSequentialGroup()
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lc_licence, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addContainerGap())
        );
        licence_panelLayout.setVerticalGroup(
            licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(licence_panelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel42)
                .addGap(70, 70, 70)
                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lc_name)
                    .addComponent(jLabel47)
                    .addComponent(lc_expired_date)
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(lc_pro_name)
                    .addComponent(lc_pro_code)
                    .addComponent(jLabel46))
                .addGap(18, 18, 18)
                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(lc_db_support)
                    .addComponent(lc_max_client))
                .addGap(18, 18, 18)
                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40)
                    .addComponent(lc_use_client)
                    .addComponent(lc_price))
                .addGap(18, 18, 18)
                .addGroup(licence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lc_licence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addContainerGap(318, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panel_bodyLayout = new javax.swing.GroupLayout(panel_body);
        panel_body.setLayout(panel_bodyLayout);
        panel_bodyLayout.setHorizontalGroup(
            panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(product_panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dash_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(seller_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(category_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(licence_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(selling_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE))
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(customer_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_bodyLayout.setVerticalGroup(
            panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(product_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1332, Short.MAX_VALUE)
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(dash_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_bodyLayout.createSequentialGroup()
                    .addComponent(seller_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                    .addGap(636, 636, 636)))
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel_bodyLayout.createSequentialGroup()
                    .addComponent(category_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(licence_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(selling_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE))
            .addGroup(panel_bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(customer_panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        seller_panel.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panel_body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sidebar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void clearSellerAll() {
        seller_id.setText("");
        seller_name.setText("");
        seller_pass.setText("");
        seller_email.setText("");
        seller_tbl.clearSelection();
        selectRow = -1;
        seller_id.setText("" + (db.getNewId("seller_id", "seller_tbl")));
    }
    private void edit_sellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_sellerActionPerformed
        selectRow = seller_tbl.getSelectedRow();
        boolean reqField = val.isNullOrEmpty(seller_id.getText(), seller_name.getText(), seller_email.getText(), seller_pass.getText());

        if (selectRow >= 0) {
            if (reqField) {
                JOptionPane.showMessageDialog(null, "Field must not be empty");
            } else {
                try {
                    Hash hash = new Hash();
                    System.out.println(hash.encrypt(String.valueOf(seller_pass.getPassword())));
                    query = "update seller_tbl set seller_name='" + seller_name.getText() + "',seller_email='" + seller_email.getText() + "',seller_password='" + hash.encrypt(String.valueOf(seller_pass.getPassword())) + "' where seller_id=" + Integer.parseInt(seller_id.getText());
                    db.executeQueryData(query, "Data has been Updated");
                    db.showData(rsm, "seller_tbl");
                    seller_tbl.setRowSelectionInterval(selectRow, selectRow);
                } catch (Exception ex) {
                    Logger.getLogger(MainApp.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else {

            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_edit_sellerActionPerformed

    private void clear_sellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_sellerActionPerformed
        clearSellerAll();
    }//GEN-LAST:event_clear_sellerActionPerformed

    private void delete_sellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_sellerActionPerformed
        selectRow = seller_tbl.getSelectedRow();
        if (selectRow >= 0) {
            if (JOptionPane.showConfirmDialog(null, "Do you want to delete it?", "Confirm to Delete ", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                query = "delete from seller_tbl where seller_id=" + Integer.parseInt(seller_id.getText());
                db.executeQueryData(query, "Data has been Deleted");
                db.showData(rsm, "seller_tbl");
                clearSellerAll();
            }
        } else {

            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_delete_sellerActionPerformed

    private void add_sellerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_sellerActionPerformed
        boolean reqField = val.isNullOrEmpty(seller_id.getText(), seller_name.getText(), String.valueOf(seller_pass.getPassword()), seller_email.getText());
        boolean numericField = val.isNumeric(seller_id.getText());
        if (reqField) {
            JOptionPane.showMessageDialog(null, "Field must not be empty");
        } else if (numericField == false) {
            JOptionPane.showMessageDialog(null, "Seller id must be numeric");
        } else if (val.isValidEmail(seller_email.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Email must be valid");
        } else {
            boolean checkId = db.checkIdExist("seller_id", "seller_tbl", seller_id.getText());
            if (checkId) {
                JOptionPane.showMessageDialog(null, "Seller id already exist");
                if (seller_tbl.getSelectedRow() >= 0) {
                    clearSellerAll();

                }
            } else {
                try {
                    Hash hash = new Hash();
                    query = "insert into seller_tbl values(" + Integer.parseInt(seller_id.getText()) + ",'" + seller_name.getText() + "','" + seller_email.getText() + "','" + hash.encrypt(String.valueOf(seller_pass.getPassword())) + "')";
                    db.executeQueryData(query, "Data has been created");
                    db.showData(rsm, "seller_tbl");
                } catch (Exception ex) {
                    Logger.getLogger(MainApp.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_add_sellerActionPerformed

    private void seller_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seller_tblMouseClicked
        if (selectRow == seller_tbl.getSelectedRow()) {
            clearSellerAll();
        } else {

            selectRow = seller_tbl.getSelectedRow();

            if (selectRow >= 0) {
                seller_id.setText(rsm.getValueAt(selectRow, 0));
                seller_name.setText(rsm.getValueAt(selectRow, 1));
                seller_email.setText(rsm.getValueAt(selectRow, 2));
                seller_pass.setText(rsm.getValueAt(selectRow, 3));
                seller_id.setEditable(false);

            }
        }
    }//GEN-LAST:event_seller_tblMouseClicked

    void clearAllCategory() {
        cat_id.setText("" + (db.getNewId("cat_id", "category_tbl")));
        cat_name.setText("");
        cat_desc.setText("");
        cat_tbl.clearSelection();
        selectRow = -1;
    }
    private void edit_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_categoryActionPerformed
        selectRow = cat_tbl.getSelectedRow();
        boolean reqField = val.isNullOrEmpty(cat_id.getText(), cat_name.getText(), cat_desc.getText());

        if (selectRow >= 0) {
            if (reqField) {
                JOptionPane.showMessageDialog(null, "Field must not be empty");
            } else {
                query = "update category_tbl set cat_name='" + cat_name.getText() + "',cat_desc='" + cat_desc.getText() + "' where cat_id=" + Integer.parseInt(cat_id.getText());
                db.executeQueryData(query, "Data has been Updated");
                db.showData(rsm, "category_tbl");
                cat_tbl.setRowSelectionInterval(selectRow, selectRow);
            }

        } else {

            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_edit_categoryActionPerformed

    private void clear_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_categoryActionPerformed
        clearAllCategory();
    }//GEN-LAST:event_clear_categoryActionPerformed

    private void delete_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_categoryActionPerformed
        selectRow = cat_tbl.getSelectedRow();
        if (selectRow >= 0) {
            if (JOptionPane.showConfirmDialog(null, "Do you want to delete it?", "Confirm to Delete ", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                query = "delete from category_tbl where cat_id=" + Integer.parseInt(cat_id.getText());
                db.executeQueryData(query, "Data has been Deleted");
                db.showData(rsm, "category_tbl");
                clearAllCategory();
            }
        } else {

            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_delete_categoryActionPerformed

    private void add_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_categoryActionPerformed
        boolean reqField = val.isNullOrEmpty(cat_id.getText(), cat_name.getText(), cat_desc.getText());
        boolean numericField = val.isNumeric(cat_id.getText());
        if (reqField) {
            JOptionPane.showMessageDialog(null, "Field must not be empty");
        } else if (numericField == false) {
            JOptionPane.showMessageDialog(null, "Seller id must be numeric");
        } else {
            boolean checkId = db.checkIdExist("cat_id", "category_tbl", cat_id.getText());
            if (checkId) {
                JOptionPane.showMessageDialog(null, "Category id already exist");
                if (cat_tbl.getSelectedRow() >= 0) {
                    clearAllCategory();

                }
            } else {

                query = "insert into category_tbl values(" + Integer.parseInt(cat_id.getText()) + ",'" + cat_name.getText() + "','" + cat_desc.getText() + "')";
                db.executeQueryData(query, "Data has been created");
                db.showData(rsm, "category_tbl");
            }

        }
        selectRow = -1;
    }//GEN-LAST:event_add_categoryActionPerformed

    private void cat_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cat_tblMouseClicked
        if (selectRow == cat_tbl.getSelectedRow()) {
            clearAllCategory();

        } else {

            selectRow = cat_tbl.getSelectedRow();
            if (selectRow >= 0) {
                cat_id.setText(rsm.getValueAt(selectRow, 0));
                cat_name.setText(rsm.getValueAt(selectRow, 1));
                cat_desc.setText(rsm.getValueAt(selectRow, 2));
            }
        }
    }//GEN-LAST:event_cat_tblMouseClicked
    private void initiateDashFunc() {
        totProduct.setText(db.getTotal(false, "count", "product_id", "product_tbl"));
        totAmount.setText(db.getTotal(false, "sum", "total_price", "billing_tbl") + " tk");
        totCategory.setText(db.getTotal(false, "count", "cat_id", "category_tbl"));
        totCustomer.setText(db.getTotal(true, "count", "customer_name", "billing_tbl"));
        totSeller.setText(db.getTotal(false, "count", "seller_id", "seller_tbl"));
        totSell.setText(db.getTotal(false, "sum", "quantity", "billing_tbl"));
    }
    private void dash_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dash_menuMouseClicked
        initiateDashFunc();
        db.showTopProduct(this.rsm);
        Color colorBG = new Color(128, 0, 0);
        dash_menu.setBackground(colorBG);
        dash_menu.setForeground(Color.WHITE);
        Color colorNormal = new Color(242, 242, 242);
        seller_menu.setBackground(colorNormal);
        category_menu.setBackground(colorNormal);
        product_menu.setBackground(colorNormal);
        selling_menu.setBackground(colorNormal);
        customer_menu.setBackground(colorNormal);
        seller_menu.setForeground(Color.BLACK);
        category_menu.setForeground(Color.BLACK);
        product_menu.setForeground(Color.BLACK);
        selling_menu.setForeground(Color.BLACK);
        customer_menu.setForeground(Color.BLACK);
        dash_panel.setVisible(true);
        category_panel.setVisible(false);
        seller_panel.setVisible(false);
        product_panel.setVisible(false);
        selling_panel.setVisible(false);
        customer_panel.setVisible(false);
        
        licence_panel.setVisible(false);
        licence_menu.setForeground(Color.BLACK);
        licence_menu.setBackground(colorNormal);
        setTitle("Dashboard - Taiyeba Cosmetics");

    }//GEN-LAST:event_dash_menuMouseClicked

    private void category_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_menuMouseClicked
        db.showData(rsm, "category_tbl");
        cat_id.setText("" + (db.getNewId("cat_id", "category_tbl")));
        userName.setText(DatabaseConector.user_name);
        Color colorBG = new Color(128, 0, 0);
        category_menu.setBackground(colorBG);
        category_menu.setForeground(Color.WHITE);
        Color colorNormal = new Color(242, 242, 242);
        seller_menu.setBackground(colorNormal);
        dash_menu.setBackground(colorNormal);
        product_menu.setBackground(colorNormal);
        selling_menu.setBackground(colorNormal);
        customer_menu.setBackground(colorNormal);
        seller_menu.setForeground(Color.BLACK);
        product_menu.setForeground(Color.BLACK);
        selling_menu.setForeground(Color.BLACK);
        customer_menu.setForeground(Color.BLACK);
        dash_menu.setForeground(Color.BLACK);
        dash_panel.setVisible(false);
        category_panel.setVisible(true);
        seller_panel.setVisible(false);
        product_panel.setVisible(false);
        selling_panel.setVisible(false);
        customer_panel.setVisible(false);
        
        licence_panel.setVisible(false);
        licence_menu.setForeground(Color.BLACK);
        licence_menu.setBackground(colorNormal);
        setTitle("Manage Category - Taiyeba Cosmetics");
    }//GEN-LAST:event_category_menuMouseClicked

    private void seller_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seller_menuMouseClicked
        db.showData(rsm, "seller_tbl");
        seller_id.setText("" + (db.getNewId("seller_id", "seller_tbl")));
        userName.setText(DatabaseConector.user_name);
        Color colorBG = new Color(128, 0, 0);
        seller_menu.setBackground(colorBG);
        seller_menu.setForeground(Color.WHITE);
        Color colorNormal = new Color(242, 242, 242);
        dash_menu.setBackground(colorNormal);
        category_menu.setBackground(colorNormal);
        product_menu.setBackground(colorNormal);
        selling_menu.setBackground(colorNormal);
        customer_menu.setBackground(colorNormal);
        category_menu.setForeground(Color.BLACK);
        product_menu.setForeground(Color.BLACK);
        selling_menu.setForeground(Color.BLACK);
        customer_menu.setForeground(Color.BLACK);
        dash_menu.setForeground(Color.BLACK);
        dash_panel.setVisible(false);
        category_panel.setVisible(false);
        seller_panel.setVisible(true);
        product_panel.setVisible(false);
        selling_panel.setVisible(false);
        customer_panel.setVisible(false);
        
        licence_panel.setVisible(false);
        licence_menu.setForeground(Color.BLACK);
        licence_menu.setBackground(colorNormal);
        setTitle("Manage Seller - Taiyeba Cosmetics");
    }//GEN-LAST:event_seller_menuMouseClicked

    private void product_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_product_menuMouseClicked
        db.getDataByColumn(this.category, false, false, "cat_name", "category_tbl");
        db.showData(rsm, "product_tbl");
        pro_id.setText("" + db.getNewId("product_id", "product_tbl"));
        Color colorBG = new Color(128, 0, 0);
        product_menu.setBackground(colorBG);
        product_menu.setForeground(Color.WHITE);
        Color colorNormal = new Color(242, 242, 242);
        seller_menu.setBackground(colorNormal);
        category_menu.setBackground(colorNormal);
        dash_menu.setBackground(colorNormal);
        selling_menu.setBackground(colorNormal);
        customer_menu.setBackground(colorNormal);
        seller_menu.setForeground(Color.BLACK);
        category_menu.setForeground(Color.BLACK);
        selling_menu.setForeground(Color.BLACK);
        customer_menu.setForeground(Color.BLACK);
        dash_menu.setForeground(Color.BLACK);
        dash_panel.setVisible(false);
        category_panel.setVisible(false);
        seller_panel.setVisible(false);
        product_panel.setVisible(true);
        selling_panel.setVisible(false);
        customer_panel.setVisible(false);
        
        licence_panel.setVisible(false);
        licence_menu.setForeground(Color.BLACK);
        licence_menu.setBackground(colorNormal);
        setTitle("Manage Product - Taiyeba Cosmetics");
    }//GEN-LAST:event_product_menuMouseClicked

    private void selling_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selling_menuMouseClicked
        db.getDataByColumn(this.filter_by_category, false, false, "cat_name", "category_tbl");
        db.showData(rsm, "product_tbl");
        bill_id.setText("" + db.getNewId("bill_id", "billing_tbl"));
        date = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        anow = LocalDateTime.now();
        dateIn.setText(date.format(anow));
        Color colorBG = new Color(128, 0, 0);
        selling_menu.setBackground(colorBG);
        selling_menu.setForeground(Color.WHITE);
        Color colorNormal = new Color(242, 242, 242);
        seller_menu.setBackground(colorNormal);
        category_menu.setBackground(colorNormal);
        product_menu.setBackground(colorNormal);
        dash_menu.setBackground(colorNormal);
        customer_menu.setBackground(colorNormal);
        seller_menu.setForeground(Color.BLACK);
        category_menu.setForeground(Color.BLACK);
        product_menu.setForeground(Color.BLACK);
        customer_menu.setForeground(Color.BLACK);
        dash_menu.setForeground(Color.BLACK);

        dash_panel.setVisible(false);
        category_panel.setVisible(false);
        seller_panel.setVisible(false);
        product_panel.setVisible(false);
        selling_panel.setVisible(true);
        customer_panel.setVisible(false);
        
        licence_panel.setVisible(false);
        licence_menu.setForeground(Color.BLACK);
        licence_menu.setBackground(colorNormal);
        setTitle("Manage Selling - Taiyeba Cosmetics");
    }//GEN-LAST:event_selling_menuMouseClicked

    private void customer_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_menuMouseClicked
        db.showData(rsm, "billing_tbl");
        for (String column : rsm.getAllColumnName()) {
            this.column_name.addItem(column);
        }
        Color colorBG = new Color(128, 0, 0);
        customer_menu.setBackground(colorBG);
        customer_menu.setForeground(Color.WHITE);
        Color colorNormal = new Color(242, 242, 242);
        seller_menu.setBackground(colorNormal);
        category_menu.setBackground(colorNormal);
        product_menu.setBackground(colorNormal);
        selling_menu.setBackground(colorNormal);
        dash_menu.setBackground(colorNormal);
        seller_menu.setForeground(Color.BLACK);
        category_menu.setForeground(Color.BLACK);
        product_menu.setForeground(Color.BLACK);
        selling_menu.setForeground(Color.BLACK);
        dash_menu.setForeground(Color.BLACK);
        invoiceBtn.setVisible(false);
        dash_panel.setVisible(false);
        category_panel.setVisible(false);
        seller_panel.setVisible(false);
        product_panel.setVisible(false);
        selling_panel.setVisible(false);
        customer_panel.setVisible(true);
        
        licence_panel.setVisible(false);
        licence_menu.setForeground(Color.BLACK);
        licence_menu.setBackground(colorNormal);
        setTitle("Cusetomer  - Taiyeba Cosmetics");
    }//GEN-LAST:event_customer_menuMouseClicked

    private void logout_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logout_menuMouseClicked
        dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_logout_menuMouseClicked

    private void userNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userNameMouseClicked
        new UpdateAdmin().setVisible(true);
    }//GEN-LAST:event_userNameMouseClicked
    void clearAllProduct() {

        pro_name.setText("");
        weight.setText("");
        price.setText("");
        category.setSelectedIndex(0);
        stock.setText("");
        pro_tbl.clearSelection();
        selectRow = -1;
        pro_id.setText("" + db.getNewId("product_id", "product_tbl"));
    }
    private void edit_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_productActionPerformed
        selectRow = pro_tbl.getSelectedRow();
        boolean reqField = val.isNullOrEmpty(pro_id.getText(), pro_name.getText(), weight.getText(), price.getText(), stock.getText());
        boolean numericField = val.isNumeric(pro_id.getText());
        if (selectRow >= 0) {
            if (reqField) {
                JOptionPane.showMessageDialog(null, "Field must not be empty");
            } else if (numericField == false) {
                JOptionPane.showMessageDialog(null, "Product id,Stock,Weight,Price must be numeric");
            } else {
                query = "update product_tbl set product_name='" + pro_name.getText()
                        + "',weight=" + Double.parseDouble(weight.getText()) + ",unit='"
                        + unit.getSelectedItem() + "',price=" + Double.parseDouble(price.getText()) + ",category='"
                        + category.getSelectedItem() + "',stock="
                        + Integer.parseInt(stock.getText()) + " where product_id="
                        + Integer.parseInt(pro_id.getText());

                db.executeQueryData(query, "Data has been Updated");
                db.showData(rsm, "product_tbl");
                pro_tbl.setRowSelectionInterval(selectRow, selectRow);
            }

        } else {

            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_edit_productActionPerformed

    private void clear_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_productActionPerformed
        clearAllProduct();
    }//GEN-LAST:event_clear_productActionPerformed

    private void delete_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_productActionPerformed
        selectRow = pro_tbl.getSelectedRow();
        if (selectRow >= 0) {
            if (JOptionPane.showConfirmDialog(null, "Do you want to delete it?", "Confirm to Delete ", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                query = "delete from product_tbl where product_id=" + Integer.parseInt(pro_id.getText());
                db.executeQueryData(query, "Data has been Deleted");
                db.showData(rsm, "product_tbl");
                clearAllProduct();
            }
        } else {

            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_delete_productActionPerformed

    private void add_productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_productActionPerformed
        boolean reqField = val.isNullOrEmpty(pro_id.getText(), pro_name.getText(), weight.getText(), price.getText(), stock.getText());
        boolean numericField = val.isNumeric(pro_id.getText(), stock.getText(), price.getText());
        if (reqField) {
            JOptionPane.showMessageDialog(null, "Field must not be empty");
        } else if (numericField == false) {
            JOptionPane.showMessageDialog(null, "Product id,Stock,Weight,Price must be numeric");
        } else {
            boolean checkId = db.checkIdExist("product_id", "product_tbl", pro_id.getText());
            if (checkId) {
                JOptionPane.showMessageDialog(null, "Product id already exist");
                if (pro_tbl.getSelectedRow() >= 0) {
                    clearAllProduct();

                }
            } else {
                query = "insert into product_tbl values(" + Integer.parseInt(pro_id.getText()) + ",'" + pro_name.getText() + "'," + Double.parseDouble(weight.getText()) + ",'" + unit.getSelectedItem() + "'," + Double.parseDouble(price.getText()) + ",'" + category.getSelectedItem() + "'," + Integer.parseInt(stock.getText()) + ")";
                db.executeQueryData(query, "Data has been created");
                db.showData(rsm, "product_tbl");
            }

        }
        selectRow = -1;
    }//GEN-LAST:event_add_productActionPerformed

    private void pro_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pro_tblMouseClicked
        if (selectRow == pro_tbl.getSelectedRow()) {
            clearAllProduct();

        } else {

            selectRow = pro_tbl.getSelectedRow();
            if (selectRow >= 0) {
                pro_id.setText(rsm.getValueAt(selectRow, 0));
                pro_name.setText(rsm.getValueAt(selectRow, 1));
                weight.setText(rsm.getValueAt(selectRow, 2));
                unit.setSelectedItem(rsm.getValueAt(selectRow, 3));
                price.setText(rsm.getValueAt(selectRow, 4));
                category.setSelectedItem(rsm.getValueAt(selectRow, 5));
                stock.setText(rsm.getValueAt(selectRow, 6));
            }
        }
    }//GEN-LAST:event_pro_tblMouseClicked

    private void filter_by_categoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filter_by_categoryItemStateChanged
        if (ItemEvent.SELECTED == evt.getStateChange()) {
            if (filter_by_category.hasFocus()) {
                if (filter_by_category.getSelectedItem().equals("All")) {
                    db.showData(rsm, "product_tbl");
                } else {
                    db.filterDataTest(rsm, "product_tbl", "category", filter_by_category.getSelectedItem().toString());
                }
            }

        }
    }//GEN-LAST:event_filter_by_categoryItemStateChanged

    private void clearSellingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearSellingActionPerformed
        clearAllSelling();
        i = 0;
        num = 0;
        totalAmount = 0;
        invoice_id = 1;
        selling_showPrice.setText("0");
    }//GEN-LAST:event_clearSellingActionPerformed

    private void selling_pro_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selling_pro_tblMouseClicked

        selectRow = selling_pro_tbl.getSelectedRow();
        bill_id.setText("" + db.getNewId("bill_id", "billing_tbl"));
        if (selectRow >= 0) {

            selling_pro_name.setText(rsm.getValueAt(selectRow, 1));

            String qtyCH = selling_qty.getText();
            if (qtyCH.equals("")) {
                selling_qty.setText("1");
                selling_showPrice.setText(rsm.getValueAt(selectRow, 4) + "x1 = " + rsm.getValueAt(selectRow, 4) + "TK");
            } else {
                if (val.isNumeric(qtyCH)) {
                    selling_showPrice.setText(rsm.getValueAt(selectRow, 4) + "x" + qtyCH + " = " + (Double.parseDouble(rsm.getValueAt(selectRow, 4)) * Integer.parseInt(qtyCH)) + "TK");
                } else {
                    JOptionPane.showMessageDialog(null, "Quantity must be numeric");
                    selling_qty.setText("1");
                    selling_showPrice.setText(rsm.getValueAt(selectRow, 4) + "x1 = " + rsm.getValueAt(selectRow, 4) + "TK");
                }
            }

        }
    }//GEN-LAST:event_selling_pro_tblMouseClicked

    private void selling_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selling_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selling_qtyActionPerformed

    private void selling_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selling_qtyKeyPressed

    }//GEN-LAST:event_selling_qtyKeyPressed

    private void selling_qtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selling_qtyKeyReleased
        if (selectRow >= 0) {
            String qtyCH = selling_qty.getText();
            System.out.println(qtyCH);
            if (val.isNumeric(qtyCH)) {
                selling_showPrice.setText(rsm.getValueAt(selectRow, 4) + "x" + qtyCH + " = " + (Double.parseDouble(rsm.getValueAt(selectRow, 4)) * Integer.parseInt(qtyCH)) + "TK");
            } else {
                JOptionPane.showMessageDialog(null, "Quantity must be numeric");
                selling_qty.setText("1");
                selling_showPrice.setText(rsm.getValueAt(selectRow, 4) + "x1 = " + rsm.getValueAt(selectRow, 4) + "TK");
            }
        }
    }//GEN-LAST:event_selling_qtyKeyReleased

    private void addToBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToBillActionPerformed
        if (selectRow >= 0) {

            boolean reqField = val.isNullOrEmpty(bill_id.getText(), dateIn.getText(), cust_name.getText(), selling_phone.getText(), selling_qty.getText(), selling_pro_name.getText());
            boolean numericField = val.isNumeric(bill_id.getText(), selling_phone.getText(), selling_qty.getText());
            if (reqField) {
                JOptionPane.showMessageDialog(null, "Field must not be empty");
            } else if (selling_phone.getText().length() > 12) {
                JOptionPane.showMessageDialog(null, "Phone number no more be 11 digit");
            } else if (numericField == false) {
                JOptionPane.showMessageDialog(null, "Bill id, Phone, Stock must be numeric");
            } else {
                i++;
                String proName = String.format(selling_pro_name.getText());
                String proId = rsm.getValueAt(selectRow, 0);
                String proWeight = rsm.getValueAt(selectRow, 2);
                String proUnit = rsm.getValueAt(selectRow, 3);
                String proPrice = rsm.getValueAt(selectRow, 4);
                String proCat = rsm.getValueAt(selectRow, 5);
                String proStock = rsm.getValueAt(selectRow, 6);
                String proQty = selling_qty.getText();
                int prost = Integer.parseInt(proStock);
                int proqt = Integer.parseInt(proQty);
                double unitPrice = Double.parseDouble(proPrice);
                String weight = proWeight + proUnit;
                if (prost < proqt) {
                    JOptionPane.showMessageDialog(null, "Stock is not availablle");
                } else {

                    if (invoiceText.getText().indexOf("\n============================================\n\t Total Amount:-") > 0) {
                        invoiceText.setText(invoiceText.getText().substring(0, invoiceText.getText().indexOf("\n============================================\n\t Total Amount:-")));

                    }

                    if (i == 1) {
                        invoice_id = Integer.parseInt(db.getNewId("invoice_id", "billing_tbl"));
                        String bIdString = String.format(db.getNewId("invoice_id", "billing_tbl"));
                        String cNString = String.format(cust_name.getText());
                        String phString = String.format(selling_phone.getText());

                        invoiceText.setText(invoiceText.getText() + "************************************************"
                                + "\n\tTaiyeba Cosmetics\t"
                                + "\n************************************************"
                                + "\n Memo ID:- " + bIdString
                                + "\n Date & Time :- " + date.format(anow)
                                + "\n Name:- " + cNString
                                + "\n Phone Number:- " + phString
                                + "\n************************************************"
                                + "\nID   Name                      Weight     Price*Qty     Total\n");
                        //  invoiceText.setText(invoiceText.getText()+"Customer Name :"+cNString+"          Phone : "+phString+"\n");
                    }
                    double tot = unitPrice * proqt;
                    totalAmount = totalAmount + tot;

                    invoiceText.setText(invoiceText.getText() + " " + (i) + "   " + val.printWord(25, proName) + "     " + proWeight + proUnit + "     " + proPrice + "*" + proQty + "     " + tot + "\n");

                    query = "update product_tbl set stock="
                            + (prost - proqt) + " where product_id="
                            + Integer.parseInt(proId);

                    db.executeQueryData(query, "");
                    if (filter_by_category.getSelectedItem().equals("All")) {
                        db.showData(rsm, "product_tbl");
                    } else {
                        db.filterData(rsm, "product_tbl", "category", filter_by_category.getSelectedItem().toString());
                    }

                    //insert into billing
                    query = "insert into billing_tbl values(" + Integer.parseInt(bill_id.getText()) + "," + invoice_id + ",'"
                            + cust_name.getText() + "','" + selling_phone.getText() + "','" + selling_pro_name.getText()
                            + "','" + weight + "','" + proCat + "'," + proqt + "," + unitPrice + "," + tot + ",'" + dateIn.getText() + "')";
                    db.executeQueryData(query, "Billing has been saved");

                    bill_id.setText("" + db.getNewId("bill_id", "billing_tbl"));
                    invoiceText.setText(invoiceText.getText() + "\n============================================\n\t Total Amount:-" + totalAmount
                            + "\n=============================================");

                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a product");
        }
    }//GEN-LAST:event_addToBillActionPerformed

    private void print_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_btnActionPerformed
        try {
            invoiceText.print();
        } catch (PrinterException ex) {
            Logger.getLogger(MainApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_print_btnActionPerformed
    void clearAllCustomer() {

        customer_tbl.clearSelection();
        selectRow = -1;
    }
    private void customer_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_tblMouseClicked
        if (selectRow == customer_tbl.getSelectedRow()) {
            clearAllCustomer();
        } else {

            selectRow = customer_tbl.getSelectedRow();

            if (selectRow >= 0) {
                // seller_id.setText(rsm.getValueAt(selectRow, 0));

            }
        }
    }//GEN-LAST:event_customer_tblMouseClicked

    private void column_nameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_column_nameItemStateChanged
        colName = column_name.getSelectedItem().toString();
        //System.out.println(colName);
        if (!colName.equals("All")) {
            db.getDataByColumn(column_value, true, true, colName, "billing_tbl");
        } else {
            column_value.removeAllItems();
            db.showData(rsm, "billing_tbl");
        }
    }//GEN-LAST:event_column_nameItemStateChanged

    private void column_valueItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_column_valueItemStateChanged
        //        if (column_value.hasFocus()) {
        //            if (ItemEvent.SELECTED == evt.getStateChange()) {
        //                colValue = column_value.getSelectedItem().toString();
        //                System.out.println(colValue);
        //                db.filterData(rsm, "billing_tbl", colName, colValue);
        //            }
        //        }
    }//GEN-LAST:event_column_valueItemStateChanged

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        colName = column_name.getSelectedItem().toString();
        //System.out.println(colValue);
        if (colName.equals("All")) {
            db.showData(rsm, "billing_tbl");
        } else {
            colValue = column_value.getSelectedItem().toString();
            db.filterData(rsm, "billing_tbl", colName, colValue);
        }

        if (colName.equals("invoice_id")) {
            invoiceBtn.setVisible(true);
        } else {
            invoiceBtn.setVisible(false);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void invoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceBtnActionPerformed
        if (colName.equals("invoice_id")) {
            new Invoice(Integer.parseInt(colValue)).setVisible(true);
        }
    }//GEN-LAST:event_invoiceBtnActionPerformed

    private void dateInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateInActionPerformed

    private void importDemo_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_importDemo_menuMouseClicked
        if (JOptionPane.showConfirmDialog(null, "Your Database data will lost.Are you sure to import Demo?", " Do you want to Import demo?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
            showDataDiologue.setVisible(true);
            JLabel lab = new JLabel(" is deleted\n");
            lab.setVisible(true);
            lab.setBounds(30, 300, 200, 30);
            dataDiologuePane.add(lab);
            if (db.dropDBTable(diologuePanel, dataDiologue)) {
                if (db.createTable(diologuePanel, dataDiologue)) {
                    db.importDemo(diologuePanel, dataDiologue);
                } else {
                    JOptionPane.showMessageDialog(null, "Something wrong....");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Something wrong....");
            }
        }
    }//GEN-LAST:event_importDemo_menuMouseClicked

    private void licence_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_licence_menuMouseClicked
         
        lc_name.setText(LicenceClass.name);
        lc_pro_name.setText(LicenceClass.product);
        lc_pro_code.setText(LicenceClass.product_code);
        lc_db_support.setText(LicenceClass.db_support);
        lc_max_client.setText(LicenceClass.max_client);
        lc_use_client.setText(LicenceClass.use_client);
        lc_price.setText(LicenceClass.price);
        lc_licence.setText(LicenceClass.licence);
        lc_expired_date.setText(LicenceClass.expired_date);
        
        
        Color colorBG = new Color(128, 0, 0);
        licence_menu.setBackground(colorBG);
        licence_menu.setForeground(Color.WHITE);
        Color colorNormal = new Color(242, 242, 242);
        seller_menu.setBackground(colorNormal);
        category_menu.setBackground(colorNormal);
        product_menu.setBackground(colorNormal);
        selling_menu.setBackground(colorNormal);
        dash_menu.setBackground(colorNormal);
        seller_menu.setForeground(Color.BLACK);
        category_menu.setForeground(Color.BLACK);
        product_menu.setForeground(Color.BLACK);
        selling_menu.setForeground(Color.BLACK);
        dash_menu.setForeground(Color.BLACK);
        invoiceBtn.setVisible(false);
        dash_panel.setVisible(false);
        category_panel.setVisible(false);
        seller_panel.setVisible(false);
        product_panel.setVisible(false);
        selling_panel.setVisible(false);
        customer_panel.setVisible(false);
        licence_panel.setVisible(true);
        customer_menu.setForeground(Color.BLACK);
        customer_menu.setBackground(colorNormal);
        setTitle("Licence Infomation - Taiyeba Cosmetics");
    }//GEN-LAST:event_licence_menuMouseClicked
    void clearAllSelling() {
        selling_pro_name.setText("");
        selling_phone.setText("");
        dateIn.setText(date.format(anow));
        selling_qty.setText("");
        selling_pro_tbl.clearSelection();
        selectRow = -1;
        bill_id.setText("" + db.getNewId("bill_id", "billing_tbl"));
        cust_name.setText("");
        invoiceText.setText("");

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Quantity;
    private javax.swing.JButton addToBill;
    private javax.swing.JButton add_category;
    private javax.swing.JButton add_product;
    private javax.swing.JButton add_seller;
    private javax.swing.JTextField bill_id;
    private javax.swing.JTextArea cat_desc;
    private javax.swing.JTextField cat_id;
    private javax.swing.JTextField cat_name;
    private javax.swing.JTable cat_tbl;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JLabel category_menu;
    private javax.swing.JPanel category_panel;
    private javax.swing.JButton clearSelling;
    private javax.swing.JButton clear_category;
    private javax.swing.JButton clear_product;
    private javax.swing.JButton clear_seller;
    private javax.swing.JComboBox<String> column_name;
    private javax.swing.JComboBox<String> column_value;
    private javax.swing.JTextField cust_name;
    private javax.swing.JLabel customer_menu;
    private javax.swing.JPanel customer_panel;
    private javax.swing.JTable customer_tbl;
    private javax.swing.JLabel dash_menu;
    private javax.swing.JPanel dash_panel;
    private javax.swing.JTextArea dataDiologue;
    private javax.swing.JScrollPane dataDiologuePane;
    private javax.swing.JTextField dateIn;
    private javax.swing.JButton delete_category;
    private javax.swing.JButton delete_product;
    private javax.swing.JButton delete_seller;
    private javax.swing.JPanel diologuePanel;
    private javax.swing.JButton edit_category;
    private javax.swing.JButton edit_product;
    private javax.swing.JButton edit_seller;
    private javax.swing.JLabel filter_by_cat_lab;
    private javax.swing.JComboBox<String> filter_by_category;
    private javax.swing.JLabel importDemo_menu;
    private javax.swing.JButton invoiceBtn;
    private javax.swing.JTextArea invoiceText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lc_db_support;
    private javax.swing.JLabel lc_expired_date;
    private javax.swing.JTextField lc_licence;
    private javax.swing.JLabel lc_max_client;
    private javax.swing.JLabel lc_name;
    private javax.swing.JLabel lc_price;
    private javax.swing.JLabel lc_pro_code;
    private javax.swing.JLabel lc_pro_name;
    private javax.swing.JLabel lc_use_client;
    private javax.swing.JLabel licence_menu;
    private javax.swing.JPanel licence_panel;
    private javax.swing.JLabel logout_menu;
    private javax.swing.JPanel panel_body;
    private javax.swing.JTextField price;
    private javax.swing.JButton print_btn;
    private javax.swing.JTextField pro_id;
    private javax.swing.JTextField pro_name;
    private javax.swing.JTable pro_tbl;
    private javax.swing.JTable product;
    private javax.swing.JLabel product_menu;
    private javax.swing.JPanel product_panel;
    private javax.swing.JButton search;
    private javax.swing.JTextField seller_email;
    private javax.swing.JTextField seller_id;
    private javax.swing.JLabel seller_menu;
    private javax.swing.JTextField seller_name;
    private javax.swing.JPanel seller_panel;
    private javax.swing.JPasswordField seller_pass;
    private javax.swing.JTable seller_tbl;
    private javax.swing.JLabel selling_menu;
    private javax.swing.JPanel selling_panel;
    private javax.swing.JTextField selling_phone;
    private javax.swing.JTextField selling_pro_name;
    private javax.swing.JTable selling_pro_tbl;
    private javax.swing.JTextField selling_qty;
    private javax.swing.JLabel selling_showPrice;
    private javax.swing.JDialog showDataDiologue;
    private javax.swing.JLabel showPriceLab;
    private javax.swing.JPanel sidebar;
    private javax.swing.JTextField stock;
    private javax.swing.JLabel totAmount;
    private javax.swing.JLabel totCategory;
    private javax.swing.JLabel totCustomer;
    private javax.swing.JLabel totProduct;
    private javax.swing.JLabel totSell;
    private javax.swing.JLabel totSeller;
    private javax.swing.JComboBox<String> unit;
    private javax.swing.JLabel userName;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables
}
